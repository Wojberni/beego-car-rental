{
    "swagger": "2.0",
    "info": {
        "title": "Go Car Rental API",
        "description": "Static autogenerated API for Go Car Rental using Beego Swagger\n",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "name": "Go Car Rental",
            "url": "http://localhost:8080/",
            "email": "wojciech.bernatek@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "schemes": [
        "HTTP",
        " HTTPS"
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Logs user into the system\n\u003cbr\u003e",
                "operationId": "AuthController.Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body of user login info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserLoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Login success for user: username\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Logs out current logged in user session\n\u003cbr\u003e",
                "operationId": "AuthController.Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "{string} Logout success!"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Register user into the system\n\u003cbr\u003e",
                "operationId": "AuthController.Register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body of user register info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Register success for user: username\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/car/": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Get all Cars\n\u003cbr\u003e",
                "operationId": "CarController.GetAllCars",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "404": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "post": {
                "tags": [
                    "car"
                ],
                "description": "Create Car\n\u003cbr\u003e",
                "operationId": "CarController.CreateCar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body for Car content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CarDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{string} message: \"Created car: RegPlate\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/car/{id}": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Get Car by id\n\u003cbr\u003e",
                "operationId": "CarController.GetCar",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of car to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "put": {
                "tags": [
                    "car"
                ],
                "description": "update the Car\n\u003cbr\u003e",
                "operationId": "CarController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Car content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CarDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Updated car: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "delete": {
                "tags": [
                    "car"
                ],
                "description": "delete the Car\n\u003cbr\u003e",
                "operationId": "CarController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Deleted car: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/privilege/": {
            "get": {
                "tags": [
                    "privilege"
                ],
                "description": "Get all Privileges\n\u003cbr\u003e",
                "operationId": "PrivilegeController.GetAll",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Privilege"
                        }
                    },
                    "404": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "post": {
                "tags": [
                    "privilege"
                ],
                "description": "Create Privilege\n\u003cbr\u003e",
                "operationId": "PrivilegeController.CreatePrivilege",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body for Privilege content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.PrivilegeDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{string} message: \"Created privilege: Name\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/privilege/{id}": {
            "get": {
                "tags": [
                    "privilege"
                ],
                "description": "Get privilege by id\n\u003cbr\u003e",
                "operationId": "PrivilegeController.Get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of privilege to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Privilege"
                        }
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "put": {
                "tags": [
                    "privilege"
                ],
                "description": "Update the privilege\n\u003cbr\u003e",
                "operationId": "PrivilegeController.Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body for privilege content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.PrivilegeDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Updated privilege: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "delete": {
                "tags": [
                    "privilege"
                ],
                "description": "delete the privilege\n\u003cbr\u003e",
                "operationId": "PrivilegeController.Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Deleted privilege: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/role/": {
            "get": {
                "tags": [
                    "role"
                ],
                "description": "Get all Roles\n\u003cbr\u003e",
                "operationId": "RoleController.GetAll",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    },
                    "404": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "post": {
                "tags": [
                    "role"
                ],
                "description": "Create Role\n\u003cbr\u003e",
                "operationId": "RoleController.CreateRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body for Role content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RoleDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{string} message: \"Created role: Name\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/role/{id}": {
            "get": {
                "tags": [
                    "role"
                ],
                "description": "Get role by id\n\u003cbr\u003e",
                "operationId": "RoleController.Get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of role to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "put": {
                "tags": [
                    "role"
                ],
                "description": "Update the role\n\u003cbr\u003e",
                "operationId": "RoleController.Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body for role content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RoleDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Updated role: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "delete": {
                "tags": [
                    "role"
                ],
                "description": "delete the role\n\u003cbr\u003e",
                "operationId": "RoleController.Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Deleted role: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get all Users\n\u003cbr\u003e",
                "operationId": "UserController.GetAll",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Create User\n\u003cbr\u003e",
                "operationId": "UserController.CreateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{string} message: \"Created user: Username\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get user by id\n\u003cbr\u003e",
                "operationId": "UserController.Get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of user to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "Update the user\n\u003cbr\u003e",
                "operationId": "UserController.Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Updated user: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "description": "delete the user\n\u003cbr\u003e",
                "operationId": "UserController.Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} message: \"Deleted user: id\""
                    },
                    "403": {
                        "description": "{string} error: \"message\""
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CarDto": {
            "title": "CarDto",
            "type": "object",
            "properties": {
                "make": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "regplate": {
                    "type": "string"
                }
            }
        },
        "dtos.PrivilegeDto": {
            "title": "PrivilegeDto",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.RoleDto": {
            "title": "RoleDto",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "privilege": {
                    "type": "string"
                }
            }
        },
        "dtos.UserDto": {
            "title": "UserDto",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dtos.UserLoginDto": {
            "title": "UserLoginDto",
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Car": {
            "title": "Car",
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Make": {
                    "type": "string"
                },
                "Model": {
                    "type": "string"
                },
                "RegPlate": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Privilege": {
            "title": "Privilege",
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "Updated": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Role": {
            "title": "Role",
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "Privileges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Privilege"
                    }
                },
                "Updated": {
                    "type": "string",
                    "format": "datetime"
                },
                "Users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string",
                    "format": "datetime"
                },
                "Email": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Password": {
                    "type": "string"
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "Updated": {
                    "type": "string",
                    "format": "datetime"
                },
                "Username": {
                    "type": "string"
                },
                "Uuid": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "Operations about Users\n"
        },
        {
            "name": "car",
            "description": "CarController operations for Car\n"
        },
        {
            "name": "role",
            "description": "Operations about Users\n"
        },
        {
            "name": "privilege",
            "description": "Operations about Users\n"
        }
    ]
}